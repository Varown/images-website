{"version":3,"sources":["pages/Register.js"],"names":["Wraper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","AuthStore","useStores","history","useHistory","name","initialValues","remember","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"sfAMA,IAAMA,EAASC,IAAOC,IAAV,KASNC,EAAQF,IAAOG,GAAV,KAKLC,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,EAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAwFlBI,UArFE,WAAO,IAEfC,EAAWC,cAAXD,UACDE,EAAQC,cA+Bd,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,qBACF,kBAAC,IAAD,iBACME,EADN,CAEEW,KAAK,QACLC,cAAe,CAAEC,UAAU,GAC3BC,SArCa,SAAAC,GACfC,QAAQC,IAAI,WAAYF,GACxBR,EAAUW,YAAYH,EAAOI,UAC7BZ,EAAUa,YAAYL,EAAOM,UAC7Bd,EAAUe,WAAWC,MACnB,WAAKP,QAAQC,IAAI,4BACfR,EAAQe,KAAK,QAEfC,OACA,WAAKT,QAAQC,IAAI,gCA6BjBS,eAxBmB,SAAAC,GACrBX,QAAQC,IAAI,UAAWU,MAyBrB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNlB,KAAK,WACLmB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,wCACjC,CAACC,UA1BgB,SAACC,EAAMC,GAC9B,MAAG,KAAKC,KAAKD,GAAgBE,QAAQC,OAAO,gEACzCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,iDACzDD,QAAQG,cA2BX,kBAAC,IAAD,OAGF,kBAAC,IAAKZ,KAAN,CACEC,MAAM,eACNlB,KAAK,WACLmB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kCACjC,CAACS,IAAI,EAAET,QAAS,mCAChB,CAACU,IAAI,GAAGV,QAAS,sCAInB,kBAAC,IAAMW,SAAP,OAEF,kBAAC,IAAKf,KAAN,CACEC,MAAM,2BACNlB,KAAK,kBACLmB,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,kCAzCpB,SAAC,GAAD,IAAEY,EAAF,EAAEA,cAAF,MAAoB,CACzCX,UADyC,SAC/BC,EAAMC,GACd,OAAGS,EAAc,cAAgBT,EAAcE,QAAQG,UAChDH,QAAQC,OAAO,mDA0ClB,kBAAC,IAAMK,SAAP,OAGF,kBAAC,IAAKf,KAASxB,EACb,kBAAC,IAAD,CAAQyC,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.83ee9b10.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button} from 'antd';\r\nimport styled from 'styled-components'\r\nimport {useStores} from \"../stores\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 18},\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 6, span: 18 },\r\n};\r\n\r\nconst Register = () => {\r\n\r\n  const {AuthStore}=useStores()\r\n  const history=useHistory()\r\n  const onFinish = values => {\r\n    console.log('Success:', values);\r\n    AuthStore.setUsername(values.username)\r\n    AuthStore.setPassword(values.password)\r\n    AuthStore.register().then(\r\n      ()=>{console.log(\"注册成功\")\r\n        history.push('/')\r\n      }\r\n    ).catch(\r\n      ()=>{console.log(\"注册失败\")}\r\n    )\r\n\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const validateUsername = (rule, value) => {\r\n    if(/\\W/.test(value)) {return Promise.reject('只能是字母数字下划线');}\r\n    if(value.length < 4 || value.length > 10) return Promise.reject('长度为4～10个字符');\r\n    return Promise.resolve();\r\n  };\r\n\r\nconst  validateConfirm=({getFieldValue})=>({\r\n  validator(rule, value) {\r\n    if(getFieldValue('password') === value) return Promise.resolve();\r\n    return Promise.reject('两次密码不一致');\r\n  }\r\n})\r\n  return (\r\n    <Wraper>\r\n      <Title>注册</Title>\r\n    <Form\r\n      {...layout}\r\n      name=\"basic\"\r\n      initialValues={{ remember: true }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"用户名\"\r\n        name=\"username\"\r\n        rules={[{ required: true, message: '请输入用户名' },\r\n          {validator:validateUsername},\r\n\r\n          ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"密码\"\r\n        name=\"password\"\r\n        rules={[{ required: true, message: '请输入密码' },\r\n          {min:4,message: '最小4位密码'},\r\n          {max:10,message: '最大10位密码'}\r\n\r\n          ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"确认密码\"\r\n        name=\"confirmPassword\"\r\n        rules={[{ required: true, message: '请确认密码' },\r\n          validateConfirm\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n         提交\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n    </Wraper>\r\n  );\r\n};\r\nexport default Register"],"sourceRoot":""}